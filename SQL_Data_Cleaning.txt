-- This was done in Microsoft Sql Server Management Studio.

SELECT *
FROM portfolio.dbo.NashvilleHousing


---------------------------------------------------------------

--Standardize Date Format

ALTER TABLE NashvilleHousing
ADD SaleDateConverted Date

UPDATE NashvilleHousing
SET SaleDateConverted = CONVERT(DATE, SaleDate)

SELECT SaleDateConverted
FROM portfolio.dbo.NashvilleHousing




---------------------------------------------------------------

--Populate Property Address


SELECT *
FROM portfolio.dbo.NashvilleHousing
WHERE PropertyAddress IS NULL

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM portfolio.dbo.NashvilleHousing a
JOIN portfolio.dbo.NashvilleHousing b
	ON a.ParcelID = b.ParcelID 
	AND a.[UniqueID ] <> B.[UniqueID ]
WHERE a.PropertyAddress IS NULL


UPDATE a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM portfolio.dbo.NashvilleHousing a
JOIN portfolio.dbo.NashvilleHousing b
	ON a.ParcelID = b.ParcelID 
	AND a.[UniqueID ] <> B.[UniqueID ]
WHERE a.PropertyAddress IS NULL




-----------------------------------------------------------------------------------------------

--Breaking Out PropertyAddress Column into Individual Columns (Address, City). (Using SUBSTRING method)


SELECT PropertyAddress
FROM portfolio.dbo.NashvilleHousing

SELECT 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) AS Address1,
SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress)) AS Address2
FROM portfolio.dbo.NashvilleHousing

ALTER TABLE portfolio.dbo.NashvilleHousing
ADD PropertySplitAddress NVARCHAR(255);

UPDATE portfolio.dbo.NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1)

ALTER TABLE portfolio.dbo.NashvilleHousing
ADD PropertySplitCity NVARCHAR(255);

UPDATE portfolio.dbo.NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1, LEN(PropertyAddress))

SELECT PropertySplitAddress, PropertySplitCity
FROM portfolio.dbo.NashvilleHousing




---------------------------------------------------------

--Breaking Out the OwnerAddress Column into Individual Columns (Address, City, State) (Using PARSENAME method)

SELECT OwnerAddress
FROM portfolio.dbo.NashvilleHousing

SELECT 
PARSENAME(REPLACE(OwnerAddress,',','.'), 3),
PARSENAME(REPLACE(OwnerAddress,',','.'), 2),
PARSENAME(REPLACE(OwnerAddress,',','.'), 1)
FROM portfolio.dbo.NashvilleHousing

ALTER TABLE portfolio.dbo.NashvilleHousing
ADD OwnerSplitAddress NVARCHAR(255);

UPDATE portfolio.dbo.NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress,',','.'), 3)

ALTER TABLE portfolio.dbo.NashvilleHousing
ADD OwnerSplitCity NVARCHAR(255);

UPDATE portfolio.dbo.NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress,',','.'), 2)

ALTER TABLE portfolio.dbo.NashvilleHousing
ADD OwnerSplitState NVARCHAR(255);

UPDATE portfolio.dbo.NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress,',','.'), 1)

SELECT OwnerSplitAddress, OwnerSplitCity, OwnerSplitState
FROM portfolio.dbo.NashvilleHousing




--------------------------------------------------------------------

--Changing 'Y' and 'N' to 'Yes' and 'No' in SoldAsVacant' column

SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM portfolio.dbo.NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2

SELECT SoldAsVacant,
CASE WHEN SoldAsVacant = 'Y' THEN 'Yes'
	 WHEN SoldAsVacant = 'N' THEN 'No'
	 ELSE SoldAsVacant
	 END
FROM portfolio.dbo.NashvilleHousing

UPDATE portfolio.dbo.NashvilleHousing
SET SoldAsVacant = CASE 
	 WHEN SoldAsVacant = 'Y' THEN 'Yes'
	 WHEN SoldAsVacant = 'N' THEN 'No'
	 ELSE SoldAsVacant
	 END

SELECT DISTINCT(SoldAsVacant), COUNT(SoldAsVacant)
FROM portfolio.dbo.NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2



-------------------------------------------------------------

--Remove duplicates (NOT CHANGING THE ORIGINAL DATA IN DATABASE)

WITH RowNumCTE AS(
SELECT *, 
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				PropertyAddress,
				SalePrice,
				SaleDate,
				LegalReference
				ORDER BY 
					[UniqueID]
					) AS ROW_NUM

FROM portfolio.dbo.NashvilleHousing
)
--ORDER BY ParcelID


DELETE                      --CHANGE "DELETE" TO "SELECT *" TO SEE ANY REMAINING DUPLICATES
FROM RowNumCTE
WHERE ROW_NUM > 1
--ORDER BY PropertyAddress




--------------------------------------------------------------

--DELETE unused columns (never do this in the main DATABASE)

SELECT *
FROM portfolio.dbo.NashvilleHousing

ALTER TABLE portfolio.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress

ALTER TABLE portfolio.dbo.NashvilleHousing
DROP COLUMN SaleDate





